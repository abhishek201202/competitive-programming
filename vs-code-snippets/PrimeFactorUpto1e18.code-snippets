{
	"": {
		"prefix": "PrimeFactorUpto1e18",
		"body": [
		  "",
		  "",
		  "// https://codeforces.com/gym/102861/problem/N",
		  "",
		  "const int mod = 1e9 + 7;",
		  "const int N = 2e6 + 5;",
		  "",
		  "vector<int> Prime;",
		  "void sieve(){",
		  "    vector<int> P(N , 0);",
		  "    for(int i = 2 ; i < N ; i++){",
		  "        if(P[i]) continue;",
		  "        for(int j = i * i ; j < N ; j += i){",
		  "            P[j] = 1;",
		  "        }",
		  "    }",
		  "    for(int i = 2 ; i < N ; i++){",
		  "        if(!P[i]) Prime.push_back(i);",
		  "    }",
		  "}",
		  "",
		  "",
		  "int mul(int a, int b, int mod){",
		  "    int ret = a * b - mod * (int)((long double)a * b / mod);",
		  "    ret = ret + (ret < 0 ? mod : 0);",
		  "    return ret;",
		  "}",
		  "",
		  "int pow(int a, int b, const int mod) {",
		  "    if (b == 0) return 1;",
		  "    int res = pow(a,b/2,mod); ",
		  "    res = mul(res, res, mod);",
		  "    return b&1 ? mul(res,a,mod) : res;",
		  "}",
		  "",
		  "",
		  "bool isPrime(int n) { // returns true if n is probably prime, else returns false.",
		  "    if(n < 2 || n % 6 % 4 != 1) return n-2 < 2 && n != 1;",
		  "    int A[] = {2, 325, 9375, 28178, 450775, 9780504, 1795265022};",
		  "    int s = __builtin_ctzll(n-1);",
		  "    int d = n >> s;",
		  "    for(int a : A) {   // ^ count trailing zeroes",
		  "        int p = pow(a,d,n), i = s;",
		  "        while (p != 1 && p != n-1 && a%n && i--) p = mul(p,p,n);",
		  "        if (p != n-1 && i != s) return 0;",
		  "    }",
		  "    return 1;",
		  "}",
		  "",
		  "",
		  "/* method to return prime divisor for n */",
		  "int PollardRho(int n){",
		  "    auto f = [n](int x) { return (mul(x,x,n)+1)%n; };",
		  "    if (!(n&1)) return 2;",
		  "    for (int i = 2;;++i) {",
		  "        int x = i, y = f(x), p;",
		  "        while((p = __gcd(n+y-x,n)) == 1) {",
		  "            x = f(x);",
		  "            y = f(f(y));",
		  "        }",
		  "        if (p != n) return p;",
		  "    }",
		  "}",
		  "",
		  "",
		  "// Prime Factors upto 1e18",
		  "vector<int> PrimeFactors(int n){",
		  "	vector<int> res;",
		  "	for(int p : Prime){",
		  "		if(p * p > n) break;",
		  "		if(n%p != 0) continue;",
		  "		res.push_back(p);",
		  "		while(n%p == 0) n /= p;",
		  "	}",
		  "	if(isPrime(n)){",
		  "		res.push_back(n);",
		  "		n = 1;",
		  "	}",
		  "	if(n != 1){",
		  "		int p = PollardRho(n);",
		  "		n /= p;",
		  "		res.push_back(p);",
		  "	}",
		  "	if(n != 1) res.push_back(n);",
		  "	return res;",
		  "}",
		  "",
		  ""
		],
		"description": ""
	  }
}