{
	"": {
		"prefix": "isCycle",
		"body": [
		  "const int N = 1e5;",
		  "vector<int> adj[N];",
		  "vector<pair<int,int>> cycle;",
		  "int col[N] , parent[N];",
		  "int n , m;",
		  "",
		  "",
		  "// 0 ==>> unvisited",
		  "// 1 ==>> visited and still present in the stack",
		  "// 2 ==>> visited and popped out from the stack",
		  "",
		  "// for undirected graph it wll give same cycle more than once ",
		  "// for directed graph",
		  "void dfs(int u , int p = -1){",
		  "	col[u] = 1;",
		  "	parent[u] = p;",
		  "	for(int i = 0 ;i < adj[u].size() ;i++){",
		  "		int v = adj[u][i];",
		  "		if(col[v]){",
		  "			if(col[v] == 1){",
		  "				cycle.pb({v , u}); // start and end vertex of cycle ",
		  "			}",
		  "			continue;",
		  "		}",
		  "		dfs(v , u);",
		  "	}",
		  "	col[u] = 2;",
		  "}",
		  ""
		],
		"description": ""
	  }
}