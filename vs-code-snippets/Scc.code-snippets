{
	"": {
		"prefix": "Scc",
		"body": [
		  "const int N = 1e5 + 500;",
		  "vector<int> adj[N] , adjT[N];",
		  "vector<vector<int>> component;",
		  "stack<int> finishV;",
		  "vector<int> vis(N);",
		  "int n , m , sz;",
		  "",
		  "void dfs(int u , int p = -1){",
		  "	vis[u] = 1;",
		  "	for(auto v : adj[u]){",
		  "		if(v == p) continue;",
		  "		if(vis[v]) continue;",
		  "		dfs(v , u);",
		  "	}",
		  "	finishV.push(u);",
		  "}",
		  "",
		  "void dfs_collect(int u , int p = -1){",
		  "	vis[u] = 1;",
		  "	component[sz].pb(u);",
		  "	for(auto v : adjT[u]){",
		  "		if(v == p) continue;",
		  "		if(vis[v]) continue;",
		  "		dfs_collect(v , u);",
		  "	}",
		  "}",
		  "void kosaraju(){",
		  "	sz = 0;",
		  "	component.resize(0);",
		  "	fill(vis.begin() , vis.end() , 0);",
		  "	for(int i = 0 ;i < n ;i++){",
		  "		if(!vis[i]) dfs(i);",
		  "	}",
		  "",
		  "	fill(vis.begin() , vis.end() , 0);",
		  "	while(finishV.size() != 0){",
		  "		int curr = finishV.top();",
		  "		finishV.pop();",
		  "		if(vis[curr]) continue;",
		  "		component.pb(vector<int>());",
		  "		dfs_collect(curr);",
		  "		sz++;",
		  "	}",
		  "}"
		],
		"description": ""
	  }
}