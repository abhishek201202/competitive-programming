{
	"": {
		"prefix": "ModularExponentiation",
		"body": [
		  "// ===== >>>>> When Value of m is very large <<<<< =====",
		  "// According to Fermatâ€™s little theorem",
		  "// a^(p-1) mod p = 1, When p is prime.",
		  "// A^B mod M = ( A^(M-1) * A^(M-1) *.......* A^(M-1) * A^(x) ) mod M",
		  "// A ^ (M-1) mod M = 1",
		  "// A^B mod M = ( 1 * 1 * ....... * 1 * A^(x) ) mod M",
		  "// Hence mod B with M-1 to reduce the number to a smaller one ",
		  "// and then use power() method to compute (a^b)%m.",
		  "",
		  "int pow(int a , int b , int m){",
		  "	if(a == 0) return 0;",
		  "	a %= m;",
		  "	int res = 1;",
		  "	while(b > 0){",
		  "		if(b & 1ll){",
		  "			res = (res * a) % m;",
		  "		}",
		  "		a = (a * a) % m;",
		  "		b >>= 1ll;",
		  "	}",
		  "	return res;",
		  "}"
		],
		"description": ""
	  }
}