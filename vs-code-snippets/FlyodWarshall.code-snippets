{
	"": {
		"prefix": "FlyodWarshall",
		"body": [
		  "const int N = 1e3;",
		  "vector<int> adj[N] , weight[N];",
		  "int dp[N][N];",
		  "int n , m;",
		  "",
		  "void flyod(){",
		  "	for(int i = 0 ;i < n;  i++){",
		  "		for(int j = 0 ; j < n ;j++){",
		  "			dp[i][j] = (i == j) ? 0 : 1e8;",
		  "		}",
		  "	}",
		  "	for(int i = 0 ; i < n ; i++){",
		  "		for(int j = 0 ; j < adj[i].size() ; j++){",
		  "			int u = i , v = adj[u][j];",
		  "			dp[u][v] = weight[u][j];",
		  "		}",
		  "	}",
		  "	for(int K = 0 ; K < n ; K ++){",
		  "		for(int i = 0 ; i < n ; i++){",
		  "			for(int j = 0; j < n ; j++){",
		  "				dp[i][j] = min(dp[i][j] , dp[i][K] + dp[K][j]);",
		  "				// K == i === >>> min(dp[i][j] , dp[i][i] + dp[i][j])",
		  "				// === >>> dp[i][i] = 0 === >>> dp[i][j] = dp[i][j] ",
		  "			}",
		  "		}",
		  "	}",
		  "}"
		],
		"description": ""
	  }
}